root = true

[*]
charset = utf-8
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true

[*.{cs,csx,vb,vbx}]
indent_style = space
indent_size = 4

[*.{json,xml,yml,yaml}]
indent_style = space
indent_size = 2

[*.md]
trim_trailing_whitespace = false

# C# Code Style Rules
[*.cs]

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# this. preferences
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion

# C# Code Style Rules

# var preferences
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion

# C# Formatting Rules

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# Code Analysis Rules

# Design Rules
dotnet_diagnostic.CA1000.severity = suggestion # Do not declare static members on generic types
dotnet_diagnostic.CA1001.severity = error      # Types that own disposable fields should be disposable
dotnet_diagnostic.CA1002.severity = warning    # Do not expose generic lists
dotnet_diagnostic.CA1003.severity = warning    # Use generic event handler instances
dotnet_diagnostic.CA1005.severity = warning    # Avoid excessive parameters on generic types
dotnet_diagnostic.CA1008.severity = warning    # Enums should have zero value
dotnet_diagnostic.CA1010.severity = warning    # Collections should implement generic interface
dotnet_diagnostic.CA1012.severity = warning    # Abstract types should not have constructors
dotnet_diagnostic.CA1014.severity = none       # Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1016.severity = warning    # Mark assemblies with assembly version
dotnet_diagnostic.CA1017.severity = none       # Mark assemblies with ComVisible
dotnet_diagnostic.CA1018.severity = warning    # Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1019.severity = warning    # Define accessors for attribute arguments
dotnet_diagnostic.CA1024.severity = warning    # Use properties where appropriate
dotnet_diagnostic.CA1027.severity = warning    # Mark enums with FlagsAttribute
dotnet_diagnostic.CA1028.severity = warning    # Enum Storage should be Int32
dotnet_diagnostic.CA1030.severity = warning    # Use events where appropriate
dotnet_diagnostic.CA1031.severity = suggestion # Do not catch general exception types
dotnet_diagnostic.CA1032.severity = warning    # Implement standard exception constructors
dotnet_diagnostic.CA1033.severity = warning    # Interface methods should be callable by child types
dotnet_diagnostic.CA1034.severity = warning    # Nested types should not be visible
dotnet_diagnostic.CA1036.severity = warning    # Override methods on comparable types
dotnet_diagnostic.CA1040.severity = warning    # Avoid empty interfaces
dotnet_diagnostic.CA1041.severity = warning    # Provide ObsoleteAttribute message
dotnet_diagnostic.CA1043.severity = warning    # Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1044.severity = warning    # Properties should not be write only
dotnet_diagnostic.CA1045.severity = warning    # Do not pass types by reference
dotnet_diagnostic.CA1046.severity = warning    # Do not overload equality operator on reference types
dotnet_diagnostic.CA1047.severity = warning    # Do not declare protected member in sealed type
dotnet_diagnostic.CA1050.severity = warning    # Declare types in namespaces
dotnet_diagnostic.CA1051.severity = warning    # Do not declare visible instance fields
dotnet_diagnostic.CA1052.severity = error      # Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1054.severity = warning    # Uri parameters should not be strings
dotnet_diagnostic.CA1055.severity = warning    # Uri return values should not be strings
dotnet_diagnostic.CA1056.severity = warning    # Uri properties should not be strings
dotnet_diagnostic.CA1058.severity = warning    # Types should not extend certain base types
dotnet_diagnostic.CA1060.severity = warning    # Move pinvokes to native methods class
dotnet_diagnostic.CA1061.severity = warning    # Do not hide base class methods
dotnet_diagnostic.CA1062.severity = suggestion # Validate arguments of public methods
dotnet_diagnostic.CA1063.severity = error      # Implement IDisposable Correctly
dotnet_diagnostic.CA1064.severity = warning    # Exceptions should be public
dotnet_diagnostic.CA1065.severity = error      # Do not raise exceptions in unexpected locations

# Performance Rules
dotnet_diagnostic.CA1806.severity = warning    # Do not ignore method results
dotnet_diagnostic.CA1810.severity = warning    # Initialize reference type static fields inline
dotnet_diagnostic.CA1812.severity = suggestion # Avoid uninstantiated internal classes
dotnet_diagnostic.CA1813.severity = warning    # Avoid unsealed attributes
dotnet_diagnostic.CA1814.severity = warning    # Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1815.severity = warning    # Override equals and operator equals on value types
dotnet_diagnostic.CA1816.severity = suggestion # Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1819.severity = warning    # Properties should not return arrays
dotnet_diagnostic.CA1820.severity = warning    # Test for empty strings using string length
dotnet_diagnostic.CA1821.severity = warning    # Remove empty Finalizers
dotnet_diagnostic.CA1822.severity = suggestion # Mark members as static
dotnet_diagnostic.CA1823.severity = warning    # Avoid unused private fields
dotnet_diagnostic.CA1824.severity = warning    # Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1825.severity = warning    # Avoid zero-length array allocations